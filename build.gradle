/*
 * Tai-e: A Static Analysis Framework for Java
 *
 * Copyright (C) 2020-- Tian Tan <tiantan@nju.edu.cn>
 * Copyright (C) 2020-- Yue Li <yueli@nju.edu.cn>
 * All rights reserved.
 *
 * Tai-e is only for educational and academic purposes,
 * and any form of commercial use is disallowed.
 * Distribution of Tai-e is disallowed without the approval.
 */

plugins {
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            files('lib/sootclasses-modified.jar'),
            'info.picocli:picocli:4.6.1',
            'org.apache.logging.log4j:log4j-api:2.13.3',
            'org.apache.logging.log4j:log4j-core:2.13.3',
            'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.2',
            'org.soot-oss:soot:4.2.1',
            'org.slf4j:slf4j-simple:1.7.5', // Fix SLF4J warning
    )
    testImplementation(
            'junit:junit:4.13',
    )
}

application {
    mainClass.set('pascal.taie.Main')
}

task allInOne(type: Jar) {
    description 'Creates a single jar file including Tai-e and all dependencies'
    manifest {
        attributes 'Main-Class': 'pascal.taie.Main'
    }
    archiveBaseName = 'tai-e-all'
    from {
        configurations.compileClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    with jar
}

task assignments(dependsOn: allInOne, type: JavaExec) {
    description 'Generates assignments'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'pascal.taie.util.AssignmentMaker'
    def cmdArgs = project.hasProperty("args") ?
            project.getProperty("args") : ""
    args cmdArgs.split()
}
