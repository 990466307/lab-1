-------------------- <LiveVar: void <init>()> (livevar) --------------------
[0@L4] invokespecial %this.<java.lang.Object: void <init>()>(); []
[1@L4] return; []

-------------------- <LiveVar: void main(java.lang.String[])> (livevar) --------------------
[0@L6] return; []

-------------------- <LiveVar: int assign(int,int,int)> (livevar) --------------------
[0@L10] temp$0 = a; [a, b, temp$0]
[1@L10] d = temp$0 + b; [a, d]
[2@L11] b = d; [a, b]
[3@L12] c = a; [b]
[4@L13] return b; []

-------------------- <LiveVar: int invoke(int,int,int)> (livevar) --------------------
[0@L17] temp$0 = a - b; [%this, a, temp$0]
[1@L17] x = temp$0; [%this, a, x]
[2@L18] temp$1 = a - x; [%this, temp$1, x]
[3@L18] y = temp$1; [%this, x]
[4@L19] z = x; [%this, z]
[5@L20] %intconst0 = 0; [%intconst0, %this, z]
[6@L20] %intconst1 = 0; [%intconst0, %intconst1, %this, z]
[7@L20] %intconst2 = 0; [%intconst0, %intconst1, %intconst2, %this, z]
[8@L20] temp$2 = invokevirtual %this.<LiveVar: int invoke(int,int,int)>(%intconst0,%intconst1,%intconst2); [z]
[9@L21] return z; []

-------------------- <LiveVar: int loopBranch(int,int,int)> (livevar) --------------------
[0@L26] %intconst0 = 1; [%intconst0, a, k, m, n]
[1@L26] temp$0 = m - %intconst0; [a, k, n, temp$0]
[2@L26] i = temp$0; [a, i, k, n]
[3@L26] nop; [a, i, k, n]
[4@L26] if (i < k) goto 6; [a, i, k, n]
[5@L26] goto 21; [a]
[6@L26] nop; [a, i, k, n]
[7@L27] if (i >= n) goto 9; [a, i, k, n]
[8@L27] goto 11; [a, i, k, n]
[9@L27] nop; [i, k, n]
[10@L28] a = n; [a, i, k, n]
[11@L28] nop; [a, i, k, n]
[12@L30] temp$1 = a; [i, k, n, temp$1]
[13@L30] temp$2 = temp$1 + i; [i, k, n, temp$2]
[14@L30] a = temp$2; [a, i, k, n]
[15@L30] nop; [a, i, k, n]
[16@L26] temp$3 = i; [a, k, n, temp$3]
[17@L26] %intconst1 = 1; [%intconst1, a, k, n, temp$3]
[18@L26] temp$4 = temp$3 + %intconst1; [a, k, n, temp$4]
[19@L26] i = temp$4; [a, i, k, n]
[20@L26] goto 3; [a, i, k, n]
[21@L26] nop; [a]
[22@L32] return a; []

-------------------- <LiveVar: void branchLoop(int,boolean)> (livevar) --------------------
[0@L37] temp$0 = 1; [c, d, temp$0, z]
[1@L37] x = temp$0; [c, d, x, z]
[2@L38] temp$1 = 2; [c, d, temp$1, x, z]
[3@L38] y = temp$1; [c, d, x, y, z]
[4@L39] %intconst0 = 0; [%intconst0, c, d, x, y, z]
[5@L39] if (c > %intconst0) goto 7; [c, d, x, y, z]
[6@L39] goto 31; [x]
[7@L39] nop; [c, d, y, z]
[8@L40] nop; [c, d, y, z]
[9@L41] temp$2 = y; [c, d, temp$2, z]
[10@L41] %intconst1 = 1; [%intconst1, c, d, temp$2, z]
[11@L41] temp$3 = temp$2 + %intconst1; [c, d, temp$3, z]
[12@L41] x = temp$3; [c, d, x, z]
[13@L42] %intconst2 = 2; [%intconst2, c, d, x, z]
[14@L42] temp$4 = %intconst2 * z; [c, d, temp$4, x, z]
[15@L42] y = temp$4; [c, d, x, y, z]
[16@L43] %intconst3 = 0; [%intconst3, c, d, x, y, z]
[17@L43] if (d == %intconst3) goto 23; [c, d, x, y, z]
[18@L43] goto 19; [c, d, y, z]
[19@L43] nop; [c, d, y, z]
[20@L44] temp$5 = y; [c, d, temp$5, y, z]
[21@L44] temp$6 = temp$5 + z; [c, d, temp$6, y]
[22@L44] x = temp$6; [c, d, x, y]
[23@L44] nop; [c, d, x, y]
[24@L46] temp$7 = 1; [c, d, temp$7, x, y]
[25@L46] z = temp$7; [c, d, x, y, z]
[26@L46] nop; [c, d, x, y, z]
[27@L47] %intconst4 = 20; [%intconst4, c, d, x, y, z]
[28@L47] if (c < %intconst4) goto 8; [c, d, x, y, z]
[29@L47] goto 30; [x]
[30@L47] nop; [x]
[31@L47] nop; [x]
[32@L49] z = x; []
[33@L49] return; []

