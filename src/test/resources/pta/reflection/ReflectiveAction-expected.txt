Points-to sets of all variables
[]:<A: java.lang.Object baz(B,java.lang.String)>/%this -> [[]:NewObj{<ReflectiveAction: void invoke()>:26(@L51)/new A}]
[]:<A: java.lang.Object baz(B,java.lang.String)>/b -> [[]:NewObj{<ReflectiveAction: void invoke()>:30(@L51)/new B}]
[]:<A: java.lang.Object baz(B,java.lang.String)>/s -> [[]:ConstantObj{java.lang.String: "arg"}]
[]:<A: java.lang.Object baz(B,java.lang.String)>/temp$0 -> [[]:NewObj{<A: java.lang.Object baz(B,java.lang.String)>:0(@L30)/new java.lang.Object}]
[]:<A: void <clinit>()>/temp$0 -> [[]:NewObj{<A: void <clinit>()>:0(@L1)/new java.lang.Object}]
[]:<A: void <init>()>/%this -> [[]:NewObj{<ReflectiveAction: void get()>:9(@L63)/new A}, []:NewObj{<ReflectiveAction: void invoke()>:26(@L51)/new A}, []:NewObj{<ReflectiveAction: void set()>:10(@L74)/new A}, []:ReflectiveObj{alloc=$r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void cnew()>:1(@L33), type=A in <ReflectiveAction: void cnew()>}, []:ReflectiveObj{alloc=r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void forname(C)>:2(@L17), type=A in <ReflectiveAction: void forname(C)>}]
[]:<A: void <init>()>/temp$0 -> [[]:NewObj{<A: void <init>()>:1(@L10)/new C}]
[]:<A: void <init>(B)>/%this -> [[]:ReflectiveObj{alloc=$r5 = invokevirtual r2.newInstance($r3)@<ReflectiveAction: void ctornew()>:13(@L40), type=A in <ReflectiveAction: void ctornew()>}]
[]:<A: void <init>(B)>/b -> [[]:NewObj{<ReflectiveAction: void ctornew()>:9(@L40)/new B}]
[]:<A: void <init>(B)>/temp$0 -> [[]:NewObj{<A: void <init>(B)>:1(@L7)/new C}]
[]:<A: void foo()>/%this -> [[]:ReflectiveObj{alloc=$r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void cnew()>:1(@L33), type=A in <ReflectiveAction: void cnew()>}]
[]:<A: void foo(A)>/%this -> [[]:ReflectiveObj{alloc=$r5 = invokevirtual r2.newInstance($r3)@<ReflectiveAction: void ctornew()>:13(@L40), type=A in <ReflectiveAction: void ctornew()>}]
[]:<A: void staticFoo(java.lang.Object)>/o -> []
[]:<B: void <init>()>/%this -> [[]:NewObj{<ReflectiveAction: void ctornew()>:9(@L40)/new B}, []:NewObj{<ReflectiveAction: void get()>:9(@L63)/new A}, []:NewObj{<ReflectiveAction: void invoke()>:26(@L51)/new A}, []:NewObj{<ReflectiveAction: void invoke()>:30(@L51)/new B}, []:NewObj{<ReflectiveAction: void set()>:10(@L74)/new A}, []:NewObj{<ReflectiveAction: void set()>:12(@L74)/new B}, []:ReflectiveObj{alloc=$r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void cnew()>:1(@L33), type=A in <ReflectiveAction: void cnew()>}, []:ReflectiveObj{alloc=$r5 = invokevirtual r2.newInstance($r3)@<ReflectiveAction: void ctornew()>:13(@L40), type=A in <ReflectiveAction: void ctornew()>}, []:ReflectiveObj{alloc=r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void forname(C)>:2(@L17), type=A in <ReflectiveAction: void forname(C)>}, []:ReflectiveObj{alloc=r4 = invokevirtual r3.newInstance()@<ReflectiveAction: void forname(C)>:8(@L21), type=B in <ReflectiveAction: void forname(C)>}]
[]:<C: void <clinit>()>/temp$0 -> [[]:NewObj{<C: void <clinit>()>:0(@L1)/new java.lang.Object}]
[]:<C: void <init>()>/%this -> [[]:NewObj{<A: void <init>()>:1(@L10)/new C}, []:NewObj{<A: void <init>(B)>:1(@L7)/new C}]
[]:<ReflectiveAction: void cnew()>/$r1 -> [[]:ReflectiveObj{alloc=$r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void cnew()>:1(@L33), type=A in <ReflectiveAction: void cnew()>}]
[]:<ReflectiveAction: void cnew()>/r0 -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<ReflectiveAction: void cnew()>/r2 -> [[]:ReflectiveObj{alloc=$r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void cnew()>:1(@L33), type=A in <ReflectiveAction: void cnew()>}]
[]:<ReflectiveAction: void ctornew()>/$r1 -> [[]:NewObj{<ReflectiveAction: void ctornew()>:2(@L39)/newarray (java.lang.Class)[%intconst0]}]
[]:<ReflectiveAction: void ctornew()>/$r3 -> [[]:NewObj{<ReflectiveAction: void ctornew()>:8(@L40)/newarray (java.lang.Object)[%intconst3]}]
[]:<ReflectiveAction: void ctornew()>/$r4 -> [[]:NewObj{<ReflectiveAction: void ctornew()>:9(@L40)/new B}]
[]:<ReflectiveAction: void ctornew()>/$r5 -> [[]:ReflectiveObj{alloc=$r5 = invokevirtual r2.newInstance($r3)@<ReflectiveAction: void ctornew()>:13(@L40), type=A in <ReflectiveAction: void ctornew()>}]
[]:<ReflectiveAction: void ctornew()>/%classconst2 -> [[]:ConstantObj{java.lang.Class: B.class}]
[]:<ReflectiveAction: void ctornew()>/r0 -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<ReflectiveAction: void ctornew()>/r2 -> [[]:ReflectionMetaObj{alloc=<A: void <init>(B)>, type=java.lang.reflect.Constructor}]
[]:<ReflectiveAction: void ctornew()>/r6 -> [[]:ReflectiveObj{alloc=$r5 = invokevirtual r2.newInstance($r3)@<ReflectiveAction: void ctornew()>:13(@L40), type=A in <ReflectiveAction: void ctornew()>}]
[]:<ReflectiveAction: void forname(C)>/$r2 -> []
[]:<ReflectiveAction: void forname(C)>/$r6 -> []
[]:<ReflectiveAction: void forname(C)>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "A"}]
[]:<ReflectiveAction: void forname(C)>/%stringconst1 -> [[]:ConstantObj{java.lang.String: "B"}]
[]:<ReflectiveAction: void forname(C)>/%stringconst3 -> [[]:ConstantObj{java.lang.String: "C"}]
[]:<ReflectiveAction: void forname(C)>/%stringconst4 -> [[]:ConstantObj{java.lang.String: "C"}]
[]:<ReflectiveAction: void forname(C)>/r0 -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<ReflectiveAction: void forname(C)>/r1 -> [[]:ReflectiveObj{alloc=r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void forname(C)>:2(@L17), type=A in <ReflectiveAction: void forname(C)>}]
[]:<ReflectiveAction: void forname(C)>/r3 -> [[]:ConstantObj{java.lang.Class: B.class}]
[]:<ReflectiveAction: void forname(C)>/r4 -> [[]:ReflectiveObj{alloc=r4 = invokevirtual r3.newInstance()@<ReflectiveAction: void forname(C)>:8(@L21), type=B in <ReflectiveAction: void forname(C)>}]
[]:<ReflectiveAction: void forname(C)>/r5 -> [[]:ConstantObj{java.lang.Class: C.class}]
[]:<ReflectiveAction: void forname(C)>/r7 -> [[]:ConstantObj{java.lang.Class: C.class}]
[]:<ReflectiveAction: void get()>/$r0 -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<ReflectiveAction: void get()>/$r3 -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<ReflectiveAction: void get()>/$r5 -> [[]:NewObj{<ReflectiveAction: void get()>:9(@L63)/new A}]
[]:<ReflectiveAction: void get()>/%nullconst1 -> []
[]:<ReflectiveAction: void get()>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "stat"}]
[]:<ReflectiveAction: void get()>/%stringconst2 -> [[]:ConstantObj{java.lang.String: "inst"}]
[]:<ReflectiveAction: void get()>/r1 -> [[]:ReflectionMetaObj{alloc=<A: java.lang.Object stat>, type=java.lang.reflect.Field}]
[]:<ReflectiveAction: void get()>/r2 -> [[]:NewObj{<A: void <clinit>()>:0(@L1)/new java.lang.Object}, []:NewObj{<ReflectiveAction: void set()>:3(@L70)/new java.lang.Object}]
[]:<ReflectiveAction: void get()>/r4 -> [[]:ReflectionMetaObj{alloc=<A: java.lang.Object inst>, type=java.lang.reflect.Field}]
[]:<ReflectiveAction: void get()>/r6 -> [[]:NewObj{<A: void <init>()>:1(@L10)/new C}]
[]:<ReflectiveAction: void invoke()>/$r0 -> [[]:NewObj{<ReflectiveAction: void invoke()>:2(@L46)/newarray (java.lang.Class)[%intconst0]}]
[]:<ReflectiveAction: void invoke()>/$r1 -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<ReflectiveAction: void invoke()>/$r10 -> [[]:NewObj{<ReflectiveAction: void invoke()>:30(@L51)/new B}]
[]:<ReflectiveAction: void invoke()>/$r3 -> [[]:NewObj{<ReflectiveAction: void invoke()>:9(@L47)/newarray (java.lang.Object)[%intconst4]}]
[]:<ReflectiveAction: void invoke()>/$r5 -> [[]:NewObj{<ReflectiveAction: void invoke()>:17(@L50)/newarray (java.lang.Class)[%intconst8]}]
[]:<ReflectiveAction: void invoke()>/$r6 -> [[]:ConstantObj{java.lang.Class: B.class}]
[]:<ReflectiveAction: void invoke()>/$r8 -> [[]:NewObj{<ReflectiveAction: void invoke()>:26(@L51)/new A}]
[]:<ReflectiveAction: void invoke()>/$r9 -> [[]:NewObj{<ReflectiveAction: void invoke()>:29(@L51)/newarray (java.lang.Object)[%intconst14]}]
[]:<ReflectiveAction: void invoke()>/%classconst10 -> [[]:ConstantObj{java.lang.Class: B.class}]
[]:<ReflectiveAction: void invoke()>/%classconst12 -> [[]:ConstantObj{java.lang.Class: java.lang.String.class}]
[]:<ReflectiveAction: void invoke()>/%classconst2 -> [[]:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:<ReflectiveAction: void invoke()>/%nullconst7 -> []
[]:<ReflectiveAction: void invoke()>/%stringconst13 -> [[]:ConstantObj{java.lang.String: "baz"}]
[]:<ReflectiveAction: void invoke()>/%stringconst17 -> [[]:ConstantObj{java.lang.String: "arg"}]
[]:<ReflectiveAction: void invoke()>/%stringconst3 -> [[]:ConstantObj{java.lang.String: "staticFoo"}]
[]:<ReflectiveAction: void invoke()>/r11 -> [[]:NewObj{<A: java.lang.Object baz(B,java.lang.String)>:0(@L30)/new java.lang.Object}]
[]:<ReflectiveAction: void invoke()>/r2 -> [[]:ReflectionMetaObj{alloc=<A: void staticFoo(java.lang.Object)>, type=java.lang.reflect.Method}]
[]:<ReflectiveAction: void invoke()>/r7 -> [[]:ReflectionMetaObj{alloc=<A: java.lang.Object baz(B,java.lang.String)>, type=java.lang.reflect.Method}]
[]:<ReflectiveAction: void main(java.lang.String[])>/r0 -> [[]:EnvObj{alloc=<main-arguments>, type=java.lang.String[] in <ReflectiveAction: void main(java.lang.String[])>}]
[]:<ReflectiveAction: void set()>/$r0 -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<ReflectiveAction: void set()>/$r2 -> [[]:NewObj{<ReflectiveAction: void set()>:3(@L70)/new java.lang.Object}]
[]:<ReflectiveAction: void set()>/$r3 -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<ReflectiveAction: void set()>/$r5 -> [[]:NewObj{<ReflectiveAction: void set()>:10(@L74)/new A}]
[]:<ReflectiveAction: void set()>/$r6 -> [[]:NewObj{<ReflectiveAction: void set()>:12(@L74)/new B}]
[]:<ReflectiveAction: void set()>/%nullconst1 -> []
[]:<ReflectiveAction: void set()>/%stringconst0 -> [[]:ConstantObj{java.lang.String: "stat"}]
[]:<ReflectiveAction: void set()>/%stringconst2 -> [[]:ConstantObj{java.lang.String: "inst"}]
[]:<ReflectiveAction: void set()>/r1 -> [[]:ReflectionMetaObj{alloc=<A: java.lang.Object stat>, type=java.lang.reflect.Field}]
[]:<ReflectiveAction: void set()>/r4 -> [[]:ReflectionMetaObj{alloc=<A: java.lang.Object inst>, type=java.lang.reflect.Field}]
[]:<ReflectiveAction: void use(java.lang.Object)>/r0 -> [[]:ConstantObj{java.lang.Class: C.class}, []:NewObj{<A: java.lang.Object baz(B,java.lang.String)>:0(@L30)/new java.lang.Object}, []:NewObj{<A: void <clinit>()>:0(@L1)/new java.lang.Object}, []:NewObj{<A: void <init>()>:1(@L10)/new C}, []:NewObj{<ReflectiveAction: void set()>:3(@L70)/new java.lang.Object}]
[]:<java.lang.Class: java.lang.Class forName(java.lang.String)>/$r3 -> []
[]:<java.lang.Class: java.lang.Class forName(java.lang.String)>/r1 -> [[]:ConstantObj{java.lang.String: "A"}, []:ConstantObj{java.lang.String: "C"}]
[]:<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>/$r6 -> []
[]:<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>/r1 -> [[]:ConstantObj{java.lang.String: "B"}, []:ConstantObj{java.lang.String: "C"}]
[]:<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>/r2 -> []
[]:<java.lang.Class: java.lang.ClassLoader getClassLoader()>/%this -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<java.lang.Class: java.lang.ClassLoader getClassLoader()>/r1 -> []
[]:<java.lang.Class: java.lang.Object newInstance()>/$r5 -> []
[]:<java.lang.Class: java.lang.Object newInstance()>/%this -> [[]:ConstantObj{java.lang.Class: A.class}, []:ConstantObj{java.lang.Class: B.class}]
[]:<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>/$r5 -> []
[]:<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>/%this -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>/r3 -> [[]:NewObj{<ReflectiveAction: void ctornew()>:2(@L39)/newarray (java.lang.Class)[%intconst0]}]
[]:<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>/$r6 -> []
[]:<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>/%this -> [[]:ConstantObj{java.lang.Class: A.class}]
[]:<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>/r0 -> [[]:ConstantObj{java.lang.String: "inst"}, []:ConstantObj{java.lang.String: "stat"}]
[]:<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>/$r7 -> []
[]:<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>/%this -> [[]:ConstantObj{java.lang.Class: A.class}, []:ConstantObj{java.lang.Class: B.class}]
[]:<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>/r0 -> [[]:ConstantObj{java.lang.String: "baz"}, []:ConstantObj{java.lang.String: "staticFoo"}]
[]:<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>/r4 -> [[]:NewObj{<ReflectiveAction: void invoke()>:17(@L50)/newarray (java.lang.Class)[%intconst8]}, []:NewObj{<ReflectiveAction: void invoke()>:2(@L46)/newarray (java.lang.Class)[%intconst0]}]
[]:<java.lang.Object: int hashCode()>/%native-this -> [[]:ReflectiveObj{alloc=r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void forname(C)>:2(@L17), type=A in <ReflectiveAction: void forname(C)>}, []:ReflectiveObj{alloc=r4 = invokevirtual r3.newInstance()@<ReflectiveAction: void forname(C)>:8(@L21), type=B in <ReflectiveAction: void forname(C)>}]
[]:<java.lang.Object: void <init>()>/%this -> [[]:NewObj{<A: java.lang.Object baz(B,java.lang.String)>:0(@L30)/new java.lang.Object}, []:NewObj{<A: void <clinit>()>:0(@L1)/new java.lang.Object}, []:NewObj{<A: void <init>()>:1(@L10)/new C}, []:NewObj{<A: void <init>(B)>:1(@L7)/new C}, []:NewObj{<C: void <clinit>()>:0(@L1)/new java.lang.Object}, []:NewObj{<ReflectiveAction: void ctornew()>:9(@L40)/new B}, []:NewObj{<ReflectiveAction: void get()>:9(@L63)/new A}, []:NewObj{<ReflectiveAction: void invoke()>:26(@L51)/new A}, []:NewObj{<ReflectiveAction: void invoke()>:30(@L51)/new B}, []:NewObj{<ReflectiveAction: void set()>:10(@L74)/new A}, []:NewObj{<ReflectiveAction: void set()>:12(@L74)/new B}, []:NewObj{<ReflectiveAction: void set()>:3(@L70)/new java.lang.Object}, []:ReflectiveObj{alloc=$r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void cnew()>:1(@L33), type=A in <ReflectiveAction: void cnew()>}, []:ReflectiveObj{alloc=$r5 = invokevirtual r2.newInstance($r3)@<ReflectiveAction: void ctornew()>:13(@L40), type=A in <ReflectiveAction: void ctornew()>}, []:ReflectiveObj{alloc=r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void forname(C)>:2(@L17), type=A in <ReflectiveAction: void forname(C)>}, []:ReflectiveObj{alloc=r4 = invokevirtual r3.newInstance()@<ReflectiveAction: void forname(C)>:8(@L21), type=B in <ReflectiveAction: void forname(C)>}]
[]:<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>/%this -> [[]:ReflectionMetaObj{alloc=<A: void <init>(B)>, type=java.lang.reflect.Constructor}]
[]:<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>/r2 -> [[]:NewObj{<ReflectiveAction: void ctornew()>:8(@L40)/newarray (java.lang.Object)[%intconst3]}]
[]:<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>/r3 -> []
[]:<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>/$r3 -> []
[]:<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>/%this -> [[]:ReflectionMetaObj{alloc=<A: java.lang.Object inst>, type=java.lang.reflect.Field}, []:ReflectionMetaObj{alloc=<A: java.lang.Object stat>, type=java.lang.reflect.Field}]
[]:<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>/r1 -> [[]:NewObj{<ReflectiveAction: void get()>:9(@L63)/new A}]
[]:<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>/%this -> [[]:ReflectionMetaObj{alloc=<A: java.lang.Object inst>, type=java.lang.reflect.Field}, []:ReflectionMetaObj{alloc=<A: java.lang.Object stat>, type=java.lang.reflect.Field}]
[]:<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>/r1 -> [[]:NewObj{<ReflectiveAction: void set()>:10(@L74)/new A}]
[]:<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>/r3 -> [[]:NewObj{<ReflectiveAction: void set()>:12(@L74)/new B}, []:NewObj{<ReflectiveAction: void set()>:3(@L70)/new java.lang.Object}]
[]:<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>/$r3 -> []
[]:<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>/%this -> [[]:ReflectionMetaObj{alloc=<A: java.lang.Object baz(B,java.lang.String)>, type=java.lang.reflect.Method}, []:ReflectionMetaObj{alloc=<A: void staticFoo(java.lang.Object)>, type=java.lang.reflect.Method}]
[]:<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>/r1 -> [[]:NewObj{<ReflectiveAction: void invoke()>:26(@L51)/new A}]
[]:<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>/r2 -> [[]:NewObj{<ReflectiveAction: void invoke()>:29(@L51)/newarray (java.lang.Object)[%intconst14]}, []:NewObj{<ReflectiveAction: void invoke()>:9(@L47)/newarray (java.lang.Object)[%intconst4]}]

Points-to sets of all instance fields
[]:NewObj{<ReflectiveAction: void get()>:9(@L63)/new A}.inst -> [[]:NewObj{<A: void <init>()>:1(@L10)/new C}]
[]:NewObj{<ReflectiveAction: void invoke()>:26(@L51)/new A}.inst -> [[]:NewObj{<A: void <init>()>:1(@L10)/new C}]
[]:NewObj{<ReflectiveAction: void set()>:10(@L74)/new A}.inst -> [[]:NewObj{<A: void <init>()>:1(@L10)/new C}, []:NewObj{<ReflectiveAction: void set()>:12(@L74)/new B}]
[]:ReflectiveObj{alloc=$r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void cnew()>:1(@L33), type=A in <ReflectiveAction: void cnew()>}.inst -> [[]:NewObj{<A: void <init>()>:1(@L10)/new C}]
[]:ReflectiveObj{alloc=$r5 = invokevirtual r2.newInstance($r3)@<ReflectiveAction: void ctornew()>:13(@L40), type=A in <ReflectiveAction: void ctornew()>}.inst -> [[]:NewObj{<A: void <init>(B)>:1(@L7)/new C}]
[]:ReflectiveObj{alloc=r1 = invokevirtual r0.newInstance()@<ReflectiveAction: void forname(C)>:2(@L17), type=A in <ReflectiveAction: void forname(C)>}.inst -> [[]:NewObj{<A: void <init>()>:1(@L10)/new C}]

Points-to sets of all array indexes
[]:EnvObj{alloc=<main-arguments>, type=java.lang.String[] in <ReflectiveAction: void main(java.lang.String[])>}[*] -> [[]:EnvObj{alloc=<main-arguments-element>, type=java.lang.String in <ReflectiveAction: void main(java.lang.String[])>}]
[]:NewObj{<ReflectiveAction: void ctornew()>:2(@L39)/newarray (java.lang.Class)[%intconst0]}[*] -> [[]:ConstantObj{java.lang.Class: B.class}]
[]:NewObj{<ReflectiveAction: void ctornew()>:8(@L40)/newarray (java.lang.Object)[%intconst3]}[*] -> [[]:NewObj{<ReflectiveAction: void ctornew()>:9(@L40)/new B}]
[]:NewObj{<ReflectiveAction: void invoke()>:17(@L50)/newarray (java.lang.Class)[%intconst8]}[*] -> [[]:ConstantObj{java.lang.Class: B.class}, []:ConstantObj{java.lang.Class: java.lang.String.class}]
[]:NewObj{<ReflectiveAction: void invoke()>:2(@L46)/newarray (java.lang.Class)[%intconst0]}[*] -> [[]:ConstantObj{java.lang.Class: java.lang.Object.class}]
[]:NewObj{<ReflectiveAction: void invoke()>:29(@L51)/newarray (java.lang.Object)[%intconst14]}[*] -> [[]:ConstantObj{java.lang.String: "arg"}, []:NewObj{<ReflectiveAction: void invoke()>:30(@L51)/new B}]
[]:NewObj{<ReflectiveAction: void invoke()>:9(@L47)/newarray (java.lang.Object)[%intconst4]}[*] -> []

Points-to sets of all static fields
<A: java.lang.Object stat> -> [[]:NewObj{<A: void <clinit>()>:0(@L1)/new java.lang.Object}, []:NewObj{<ReflectiveAction: void set()>:3(@L70)/new java.lang.Object}]
<C: java.lang.Object f> -> [[]:NewObj{<C: void <clinit>()>:0(@L1)/new java.lang.Object}]

