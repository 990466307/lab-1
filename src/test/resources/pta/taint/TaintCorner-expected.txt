Points-to sets of all variables
[]:<SourceSink: java.lang.String source()>/temp$0 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]
[]:<SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>/s1 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintCorner: void corner2()>[0@L15] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>/s2 -> [[]:NewObj{<TaintCorner: void corner2()>[2@L16] new java.lang.String}]
[]:<SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>/temp$0 -> [[]:NewObj{<SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>[0@L16] new java.lang.String}]
[]:<SourceSink: void sink(java.lang.String)>/s -> [[]:NewObj{<SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>[0@L16] new java.lang.String}, []:TaintObj{alloc=<TaintCorner: void corner2()>[5@L17] temp$2 = invokestatic SourceSink.sourceAndSink(s1, s2),type=java.lang.String}]
[]:<SourceSink: void sink(java.lang.String,java.lang.String)>/s1 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintCorner: void corner1()>[0@L9] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<SourceSink: void sink(java.lang.String,java.lang.String)>/s2 -> [[]:NewObj{<TaintCorner: void corner1()>[2@L10] new java.lang.String}]
[]:<TaintCorner: void corner1()>/s -> [[]:NewObj{<TaintCorner: void corner1()>[2@L10] new java.lang.String}]
[]:<TaintCorner: void corner1()>/taint -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintCorner: void corner1()>[0@L9] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<TaintCorner: void corner1()>/temp$0 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintCorner: void corner1()>[0@L9] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<TaintCorner: void corner1()>/temp$1 -> [[]:NewObj{<TaintCorner: void corner1()>[2@L10] new java.lang.String}]
[]:<TaintCorner: void corner2()>/s1 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintCorner: void corner2()>[0@L15] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<TaintCorner: void corner2()>/s2 -> [[]:NewObj{<TaintCorner: void corner2()>[2@L16] new java.lang.String}]
[]:<TaintCorner: void corner2()>/taint -> [[]:NewObj{<SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>[0@L16] new java.lang.String}, []:TaintObj{alloc=<TaintCorner: void corner2()>[5@L17] temp$2 = invokestatic SourceSink.sourceAndSink(s1, s2),type=java.lang.String}]
[]:<TaintCorner: void corner2()>/temp$0 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<TaintCorner: void corner2()>[0@L15] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<TaintCorner: void corner2()>/temp$1 -> [[]:NewObj{<TaintCorner: void corner2()>[2@L16] new java.lang.String}]
[]:<TaintCorner: void corner2()>/temp$2 -> [[]:NewObj{<SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>[0@L16] new java.lang.String}, []:TaintObj{alloc=<TaintCorner: void corner2()>[5@L17] temp$2 = invokestatic SourceSink.sourceAndSink(s1, s2),type=java.lang.String}]
[]:<java.lang.Object: void <init>()>/%this -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>[0@L16] new java.lang.String}, []:NewObj{<TaintCorner: void corner1()>[2@L10] new java.lang.String}, []:NewObj{<TaintCorner: void corner2()>[2@L16] new java.lang.String}]
[]:<java.lang.String: void <init>()>/$b0 -> []
[]:<java.lang.String: void <init>()>/$r2 -> []
[]:<java.lang.String: void <init>()>/%this -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>[0@L16] new java.lang.String}, []:NewObj{<TaintCorner: void corner1()>[2@L10] new java.lang.String}, []:NewObj{<TaintCorner: void corner2()>[2@L16] new java.lang.String}]

Points-to sets of all static fields

Points-to sets of all instance fields
[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}.coder -> []
[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}.value -> []
[]:NewObj{<SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>[0@L16] new java.lang.String}.coder -> []
[]:NewObj{<SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>[0@L16] new java.lang.String}.value -> []
[]:NewObj{<TaintCorner: void corner1()>[2@L10] new java.lang.String}.coder -> []
[]:NewObj{<TaintCorner: void corner1()>[2@L10] new java.lang.String}.value -> []
[]:NewObj{<TaintCorner: void corner2()>[2@L16] new java.lang.String}.coder -> []
[]:NewObj{<TaintCorner: void corner2()>[2@L16] new java.lang.String}.value -> []

Points-to sets of all array indexes

Detected 2 taint flow(s):
TaintFlow{<TaintCorner: void corner2()>[0@L15] temp$0 = invokestatic <SourceSink: java.lang.String source()>(); -> <TaintCorner: void corner2()>[5@L17] temp$2 = invokestatic <SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>(s1, s2);/0}
TaintFlow{<TaintCorner: void corner2()>[5@L17] temp$2 = invokestatic <SourceSink: java.lang.String sourceAndSink(java.lang.String,java.lang.String)>(s1, s2); -> <TaintCorner: void corner2()>[7@L18] invokestatic <SourceSink: void sink(java.lang.String)>(taint);/0}

