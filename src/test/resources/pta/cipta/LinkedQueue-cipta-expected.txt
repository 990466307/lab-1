Points-to sets of all variables
<LinkedQueue: boolean check()>/%this -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L89] new LinkedQueue}]
<LinkedQueue: boolean check()>/lastNode -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$0 -> []
<LinkedQueue: boolean check()>/temp$1 -> []
<LinkedQueue: boolean check()>/temp$10 -> []
<LinkedQueue: boolean check()>/temp$11 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$12 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$13 -> []
<LinkedQueue: boolean check()>/temp$14 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$15 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$16 -> []
<LinkedQueue: boolean check()>/temp$17 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$18 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$19 -> []
<LinkedQueue: boolean check()>/temp$2 -> []
<LinkedQueue: boolean check()>/temp$20 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$21 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$22 -> []
<LinkedQueue: boolean check()>/temp$23 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$24 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$25 -> []
<LinkedQueue: boolean check()>/temp$26 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$27 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$28 -> []
<LinkedQueue: boolean check()>/temp$29 -> []
<LinkedQueue: boolean check()>/temp$3 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$32 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$33 -> []
<LinkedQueue: boolean check()>/temp$34 -> []
<LinkedQueue: boolean check()>/temp$35 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$36 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$37 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$38 -> []
<LinkedQueue: boolean check()>/temp$39 -> []
<LinkedQueue: boolean check()>/temp$4 -> []
<LinkedQueue: boolean check()>/temp$5 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$6 -> []
<LinkedQueue: boolean check()>/temp$7 -> []
<LinkedQueue: boolean check()>/temp$8 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/temp$9 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean check()>/x -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean isEmpty()>/%this -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L89] new LinkedQueue}]
<LinkedQueue: boolean isEmpty()>/temp$0 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: boolean isEmpty()>/temp$1 -> []
<LinkedQueue: java.lang.Object dequeue()>/%this -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L89] new LinkedQueue}]
<LinkedQueue: java.lang.Object dequeue()>/item -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L90] new java.lang.Object}, NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L91] new java.lang.Object}]
<LinkedQueue: java.lang.Object dequeue()>/temp$0 -> []
<LinkedQueue: java.lang.Object dequeue()>/temp$1 -> []
<LinkedQueue: java.lang.Object dequeue()>/temp$2 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: java.lang.Object dequeue()>/temp$3 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: java.lang.Object dequeue()>/temp$4 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: java.lang.Object dequeue()>/temp$5 -> []
<LinkedQueue: java.lang.Object dequeue()>/temp$6 -> []
<LinkedQueue: java.lang.Object dequeue()>/temp$7 -> []
<LinkedQueue: java.lang.Object dequeue()>/temp$8 -> []
<LinkedQueue: void <init>()>/%this -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L89] new LinkedQueue}]
<LinkedQueue: void <init>()>/temp$0 -> []
<LinkedQueue: void <init>()>/temp$1 -> []
<LinkedQueue: void <init>()>/temp$2 -> []
<LinkedQueue: void enqueue(java.lang.Object)>/%this -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L89] new LinkedQueue}]
<LinkedQueue: void enqueue(java.lang.Object)>/item -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L90] new java.lang.Object}, NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L91] new java.lang.Object}]
<LinkedQueue: void enqueue(java.lang.Object)>/oldlast -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: void enqueue(java.lang.Object)>/temp$0 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: void enqueue(java.lang.Object)>/temp$1 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: void enqueue(java.lang.Object)>/temp$2 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: void enqueue(java.lang.Object)>/temp$3 -> []
<LinkedQueue: void enqueue(java.lang.Object)>/temp$4 -> []
<LinkedQueue: void enqueue(java.lang.Object)>/temp$5 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: void enqueue(java.lang.Object)>/temp$6 -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<LinkedQueue: void enqueue(java.lang.Object)>/temp$7 -> []
<LinkedQueue: void enqueue(java.lang.Object)>/temp$8 -> []
<LinkedQueue: void main(java.lang.String[])>/item -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L90] new java.lang.Object}, NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L91] new java.lang.Object}]
<LinkedQueue: void main(java.lang.String[])>/queue -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L89] new LinkedQueue}]
<LinkedQueue: void main(java.lang.String[])>/temp$0 -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L89] new LinkedQueue}]
<LinkedQueue: void main(java.lang.String[])>/temp$1 -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L90] new java.lang.Object}]
<LinkedQueue: void main(java.lang.String[])>/temp$2 -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L91] new java.lang.Object}]
<LinkedQueue: void main(java.lang.String[])>/temp$3 -> []
<LinkedQueue: void main(java.lang.String[])>/temp$4 -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L90] new java.lang.Object}, NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L91] new java.lang.Object}]
<Node: void <init>()>/%this -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
<java.lang.Object: void <init>()>/%this -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}, NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L89] new LinkedQueue}, NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L90] new java.lang.Object}, NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L91] new java.lang.Object}]

Points-to sets of all static fields

Points-to sets of all instance fields
NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}.item -> [NewObj{<LinkedQueue: void main(java.lang.String[])>[3@L90] new java.lang.Object}, NewObj{<LinkedQueue: void main(java.lang.String[])>[6@L91] new java.lang.Object}]
NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}.next -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L89] new LinkedQueue}.first -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L89] new LinkedQueue}.last -> [NewObj{<LinkedQueue: void enqueue(java.lang.Object)>[1@L33] new Node}]
NewObj{<LinkedQueue: void main(java.lang.String[])>[0@L89] new LinkedQueue}.n -> []

Points-to sets of all array indexes

