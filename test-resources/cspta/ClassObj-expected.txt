---------- Points-to sets of all variables: ----------
[]:<ClassObj$A: void <clinit>()>/$r0 -> {[]:NewObj{<ClassObj$A: void <clinit>()>:0(@L16)/new java.lang.Object}}
[]:<ClassObj$A: void <clinit>()>/r1 -> {[]:NewObj{<ClassObj$A: void <clinit>()>:0(@L16)/new java.lang.Object}}
[]:<ClassObj: void main(java.lang.String[])>/%classconstant0 -> {[]:ConstantObj{java.lang.Class: "ClassObj$A"}}
[]:<ClassObj: void main(java.lang.String[])>/r0 -> {[]:ConstantObj{java.lang.Class: "ClassObj$A"}}
[]:<ClassObj: void main(java.lang.String[])>/r1 -> {[]:ConstantObj{java.lang.Class: "ClassObj$A"}}
[]:<ClassObj: void main(java.lang.String[])>/r2 -> {[]:EnvObj{<ClassObj: void main(java.lang.String[])>/<main-arguments>}}
[]:<java.lang.Class: void <clinit>()>/$r0 -> {[]:NewObj{<java.lang.Class: void <clinit>()>:4(@L3179)/newarray (java.io.ObjectStreamField)[%intconstant1]}}
[]:<java.lang.Object: int hashCode()>/%native-this -> {[]:ConstantObj{java.lang.Class: "ClassObj$A"}}
[]:<java.lang.Object: void <init>()>/%this -> {[]:NewObj{<ClassObj$A: void <clinit>()>:0(@L16)/new java.lang.Object}}
---------- Points-to sets of all instance fields: ----------
---------- Points-to sets of all array indexes: ----------
[]:EnvObj{<ClassObj: void main(java.lang.String[])>/<main-arguments>}[*] -> {[]:EnvObj{<ClassObj: void main(java.lang.String[])>/<main-arguments-element>}}
---------- Points-to sets of all static fields: ----------
<ClassObj: java.lang.Class klass> -> {[]:ConstantObj{java.lang.Class: "ClassObj$A"}}
<java.lang.Class: java.io.ObjectStreamField[] serialPersistentFields> -> {[]:NewObj{<java.lang.Class: void <clinit>()>:4(@L3179)/newarray (java.io.ObjectStreamField)[%intconstant1]}}
