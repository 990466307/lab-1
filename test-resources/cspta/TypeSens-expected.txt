---------- Points-to sets of all variables: ----------
[]:<TypeSens: void main(java.lang.String[])>/r0 -> {[]:ConstantObj{java.lang.String: "xxx"}}
[]:<TypeSens: void main(java.lang.String[])>/r1 -> {[]:ConstantObj{java.lang.Class: "TypeSens.class"}}
[]:<TypeSens: void main(java.lang.String[])>/r3 -> {[]:EnvObj{<TypeSens: void main(java.lang.String[])>/<main-arguments>}}
[]:<java.lang.Class: void <clinit>()>/$r0 -> {[]:NewObj{<java.lang.Class: void <clinit>()>:4(@L2803)/newarray (java.io.ObjectStreamField)[%intconstant1]}}
[]:<java.lang.String: void <clinit>()>/$r0 -> {[]:NewObj{<java.lang.String: void <clinit>()>:1(@L122)/newarray (java.io.ObjectStreamField)[%intconstant0]}}
[]:<java.lang.String: void <clinit>()>/$r1 -> {[]:NewObj{<java.lang.String: void <clinit>()>:3(@L1209)/new java.lang.String$CaseInsensitiveComparator}}
[java.lang.Class]:<java.lang.Class: java.lang.String getName()>/$r1 -> {}
[java.lang.Class]:<java.lang.Class: java.lang.String getName()>/$r2 -> {}
[java.lang.Class]:<java.lang.Class: java.lang.String getName()>/$r3 -> {}
[java.lang.Class]:<java.lang.Class: java.lang.String getName()>/%this -> {[]:ConstantObj{java.lang.Class: "TypeSens.class"}}
[java.lang.Class]:<java.lang.Class: java.lang.String getName0()>/%native-ret -> {}
[java.lang.Class]:<java.lang.Class: java.lang.String getName0()>/%native-this -> {[]:ConstantObj{java.lang.Class: "TypeSens.class"}}
[java.lang.String]:<java.lang.Object: void <init>()>/%this -> {[]:NewObj{<java.lang.String: void <clinit>()>:3(@L1209)/new java.lang.String$CaseInsensitiveComparator}}
[java.lang.String]:<java.lang.String$CaseInsensitiveComparator: void <init>()>/%this -> {[]:NewObj{<java.lang.String: void <clinit>()>:3(@L1209)/new java.lang.String$CaseInsensitiveComparator}}
[java.lang.String]:<java.lang.String$CaseInsensitiveComparator: void <init>(java.lang.String$1)>/%this -> {[]:NewObj{<java.lang.String: void <clinit>()>:3(@L1209)/new java.lang.String$CaseInsensitiveComparator}}
[java.lang.String]:<java.lang.String: int hashCode()>/%this -> {[]:ConstantObj{java.lang.String: "xxx"}}
[java.lang.String]:<java.lang.String: int hashCode()>/r1 -> {}
---------- Points-to sets of all instance fields: ----------
[]:ConstantObj{java.lang.Class: "TypeSens.class"}.name -> {}
[]:ConstantObj{java.lang.String: "xxx"}.value -> {}
---------- Points-to sets of all array indexes: ----------
[]:EnvObj{<TypeSens: void main(java.lang.String[])>/<main-arguments>}[*] -> {[]:EnvObj{<TypeSens: void main(java.lang.String[])>/<main-arguments-element>}}
---------- Points-to sets of all static fields: ----------
<java.lang.Class: java.io.ObjectStreamField[] serialPersistentFields> -> {[]:NewObj{<java.lang.Class: void <clinit>()>:4(@L2803)/newarray (java.io.ObjectStreamField)[%intconstant1]}}
<java.lang.String: java.io.ObjectStreamField[] serialPersistentFields> -> {[]:NewObj{<java.lang.String: void <clinit>()>:1(@L122)/newarray (java.io.ObjectStreamField)[%intconstant0]}}
<java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> -> {[]:NewObj{<java.lang.String: void <clinit>()>:3(@L1209)/new java.lang.String$CaseInsensitiveComparator}}
