---------- Points-to sets of all variables: ----------
[]:<OneCall: void main(java.lang.String[])>/args -> {[]:EnvObj{alloc=<main-arguments>, type=java.lang.String[] in <OneCall: void main(java.lang.String[])>}}
[]:<OneCall: void main(java.lang.String[])>/c -> {[]:NewObj{<OneCall: void main(java.lang.String[])>:0(@L7)/new C}}
[]:<OneCall: void main(java.lang.String[])>/temp$0 -> {[]:NewObj{<OneCall: void main(java.lang.String[])>:0(@L7)/new C}}
[invokespecial <C: void <init>()>:0(@L12)/%this.<init>()]:<java.lang.Object: void <init>()>/%this -> {[]:NewObj{<OneCall: void main(java.lang.String[])>:0(@L7)/new C}}
[invokespecial <C: void m()>:1(@L16)/temp$0.<init>()]:<One: void <init>()>/%this -> {[]:NewObj{<C: void m()>:0(@L16)/new One}}
[invokespecial <C: void m()>:4(@L17)/temp$1.<init>()]:<Two: void <init>()>/%this -> {[]:NewObj{<C: void m()>:3(@L17)/new Two}}
[invokespecial <One: void <init>()>:0(@L34)/%this.<init>()]:<java.lang.Object: void <init>()>/%this -> {[]:NewObj{<C: void m()>:0(@L16)/new One}}
[invokespecial <OneCall: void main(java.lang.String[])>:1(@L7)/temp$0.<init>()]:<C: void <init>()>/%this -> {[]:NewObj{<OneCall: void main(java.lang.String[])>:0(@L7)/new C}}
[invokespecial <Two: void <init>()>:0(@L40)/%this.<init>()]:<java.lang.Object: void <init>()>/%this -> {[]:NewObj{<C: void m()>:3(@L17)/new Two}}
[invokevirtual <OneCall: void main(java.lang.String[])>:3(@L8)/c.m()]:<C: void m()>/%this -> {[]:NewObj{<OneCall: void main(java.lang.String[])>:0(@L7)/new C}}
[invokevirtual <OneCall: void main(java.lang.String[])>:3(@L8)/c.m()]:<C: void m()>/n1 -> {[]:NewObj{<C: void m()>:0(@L16)/new One}}
[invokevirtual <OneCall: void main(java.lang.String[])>:3(@L8)/c.m()]:<C: void m()>/n2 -> {[]:NewObj{<C: void m()>:3(@L17)/new Two}}
[invokevirtual <OneCall: void main(java.lang.String[])>:3(@L8)/c.m()]:<C: void m()>/temp$0 -> {[]:NewObj{<C: void m()>:0(@L16)/new One}}
[invokevirtual <OneCall: void main(java.lang.String[])>:3(@L8)/c.m()]:<C: void m()>/temp$1 -> {[]:NewObj{<C: void m()>:3(@L17)/new Two}}
[invokevirtual <OneCall: void main(java.lang.String[])>:3(@L8)/c.m()]:<C: void m()>/temp$2 -> {[]:NewObj{<C: void m()>:0(@L16)/new One}}
[invokevirtual <OneCall: void main(java.lang.String[])>:3(@L8)/c.m()]:<C: void m()>/temp$3 -> {[]:NewObj{<C: void m()>:3(@L17)/new Two}}
[invokevirtual <OneCall: void main(java.lang.String[])>:3(@L8)/c.m()]:<C: void m()>/x -> {[]:NewObj{<C: void m()>:0(@L16)/new One}}
[invokevirtual <OneCall: void main(java.lang.String[])>:3(@L8)/c.m()]:<C: void m()>/y -> {[]:NewObj{<C: void m()>:3(@L17)/new Two}}
[temp$2 = invokevirtual <C: void m()>:6(@L18)/%this.id(n1)]:<C: Number id(Number)>/%this -> {[]:NewObj{<OneCall: void main(java.lang.String[])>:0(@L7)/new C}}
[temp$2 = invokevirtual <C: void m()>:6(@L18)/%this.id(n1)]:<C: Number id(Number)>/n -> {[]:NewObj{<C: void m()>:0(@L16)/new One}}
[temp$3 = invokevirtual <C: void m()>:8(@L19)/%this.id(n2)]:<C: Number id(Number)>/%this -> {[]:NewObj{<OneCall: void main(java.lang.String[])>:0(@L7)/new C}}
[temp$3 = invokevirtual <C: void m()>:8(@L19)/%this.id(n2)]:<C: Number id(Number)>/n -> {[]:NewObj{<C: void m()>:3(@L17)/new Two}}
[temp$4 = invokeinterface <C: void m()>:10(@L20)/x.get()]:<One: int get()>/%this -> {[]:NewObj{<C: void m()>:0(@L16)/new One}}
---------- Points-to sets of all instance fields: ----------
---------- Points-to sets of all array indexes: ----------
[]:EnvObj{alloc=<main-arguments>, type=java.lang.String[] in <OneCall: void main(java.lang.String[])>}[*] -> {[]:EnvObj{alloc=<main-arguments-element>, type=java.lang.String in <OneCall: void main(java.lang.String[])>}}
---------- Points-to sets of all static fields: ----------
